version: '3.8'

services:
  app:
    build: .
    container_name: dc-countdown-app
    ports:
      - "${PORT:-3000}:3000"
    volumes:
      # Persist database
      - db-data:/usr/src/app/data
      # Persist uploads
      - uploads:/usr/src/app/uploads
      # Persist logs
      - logs:/usr/src/app/logs
      # Persist backups
      - backups:/usr/src/app/backups
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - DB_PATH=/usr/src/app/data/migration.db
      - DB_BACKUP_PATH=/usr/src/app/backups
    restart: unless-stopped
    networks:
      - dc-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add nginx for production with caching
  nginx:
    image: nginx:alpine
    container_name: dc-countdown-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-cache:/var/cache/nginx
      - ./public:/usr/share/nginx/html:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - dc-network
    profiles:
      - with-nginx

networks:
  dc-network:
    driver: bridge

volumes:
  db-data:
    driver: local
  uploads:
    driver: local
  logs:
    driver: local
  backups:
    driver: local
  nginx-cache:
    driver: local